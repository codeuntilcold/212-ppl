class ASTGeneration(MPVisitor):

    def visitProgram(self,ctx:MPParser.ProgramContext):
        vardecls = [ele for vardecl in ctx.vardecl() for ele in self.visit(vardecl)]
        return Program(vardecls)

    def visitVardecl(self,ctx:MPParser.VardeclContext):
        typ = self.visit(ctx.mptype())
        ids = self.visit(ctx.ids())
        return list(map(lambda x: VarDecl(x, typ), ids))

    def visitMptype(self,ctx:MPParser.MptypeContext):
        return IntType() if ctx.INTTYPE() else FloatType()

    def visitIds(self,ctx:MPParser.IdsContext):
        ids = ctx.ID()
        return list(map( lambda x: Id(x.getText()), ids ))